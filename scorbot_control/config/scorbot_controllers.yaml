# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
hardware_control_loop:
   loop_hz: 20

# Settings for ros_control hardware interface
hardware_interface:
   joints:
      - base_to_body
      - body_to_upper_arm
      - upper_arm_to_fore_arm
      - fore_arm_to_wrist_x
      - wrist_x_to_wrist_z

# Publish all joint states ----------------------------------
# Creates the /joint_states topic necessary in ROS
joint_state_controller:
   type:         joint_state_controller/JointStateController
   publish_rate: 50

# Effort Trajectory Controller -------------------------------
# For detailed explanations of parameter see http://wiki.ros.org/joint_trajectory_controller
effort_trajectory_controller:
   type: effort_controllers/JointTrajectoryController
   # These joints can likely just be copied from the hardware_interface list above
   joints:
      - base_to_body
      - body_to_upper_arm
      - upper_arm_to_fore_arm
      - fore_arm_to_wrist_x
      - wrist_x_to_wrist_z
   constraints:
      goal_time: 10.0
      stopped_position_tolerance: 0.4 # Defaults to 0.01
      base_to_body:
          trajectory: 0.30
          goal:       0.10
      body_to_upper_arm:
          trajectory: 0.30
          goal:       0.10
      upper_arm_to_fore_arm:
          trajectory: 0.30
          goal:       0.10
      fore_arm_to_wrist_x:
          trajectory: 0.30
          goal:       0.10
      wrist_x_to_wrist_z:
          trajectory: 0.30
          goal:       0.10                    
   gains:
       base_to_body:          {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}
       body_to_upper_arm:     {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}
       upper_arm_to_fore_arm: {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}
       fore_arm_to_wrist_x:   {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}
       wrist_x_to_wrist_z:    {p: 2.0,  i: 0.0, d: 0.01, i_clamp: 1}

    # state_publish_rate:  50 # Defaults to 50
    # action_monitor_rate: 20 # Defaults to 20
    #hold_trajectory_duration: 0 # Defaults to 0.5

# Individual Position Controllers ---------------------------------------
# Allows to send individual ROS msg of Float64 to each joint separately
base_to_body_position_controller:
   type: position_controllers/JointPositionController
   joint: base_to_body
   pid: {p: 100.0, i: 0.01, d: 10.0}
body_to_upper_arm_position_controller:
   type: position_controllers/JointPositionController
   joint: body_to_upper_arm
   pid: {p: 100.0, i: 0.01, d: 10.0}
upper_arm_to_fore_arm_position_controller:
   type: position_controllers/JointPositionController
   joint: upper_arm_to_fore_arm
   pid: {p: 100.0, i: 0.01, d: 10.0}
fore_arm_to_wrist_x_position_controller:
   type: position_controllers/JointPositionController
   joint: fore_arm_to_wrist_x
   pid: {p: 100.0, i: 0.01, d: 10.0}
wrist_x_to_wrist_z_position_controller:
   type: position_controllers/JointPositionController
   joint: wrist_x_to_wrist_z
   pid: {p: 100.0, i: 0.01, d: 10.0}
# Group Position Controllers ---------------------------------------
# Allows to send single ROS msg of Float64MultiArray to all joints
joint_position_controller:
   type: position_controllers/JointGroupPositionController
   joints: 
     - base_to_body
     - body_to_upper_arm
     - upper_arm_to_fore_arm
     - fore_arm_to_wrist_x
     - wrist_x_to_wrist_z

